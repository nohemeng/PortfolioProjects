/*
Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
*/

SELECT *
FROM PortfolioProject.CovidDeaths
WHERE continent is not null 
ORDER BY 3,4

SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM PortfolioProject.CovidDeaths
order by 1,2

--Looking at Total Cases vs Total Deaths
--Likelihood of death after contracting covid

SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM PortfolioProject.CovidDeaths
WHERE location like '%Ghana%'
ORDER BY 1,2

--Looking at Total Cases vs Population
-- Shows percentage of population infected with Covid

SELECT Location, date, Population, total_cases,  (total_cases/population)*100 as PercentPopulationInfected
FROM PortfolioProject.CovidDeaths
WHERE location like '%Ghana%'
ORDER BY 1,2

-- Looking at countries with Highest Infection Rate compared to Population

SELECT Location, Population, MAX(total_cases) as HighestInfectionCount,  MAX((total_cases/population))*100 as PercentPopulationInfected
FROM PortfolioProject.CovidDeaths
GROUP BY Location, Population
ORDER BY PercentPopulationInfected desc

-- Showing Countries with Highest Death Count per Population

SELECT Location, MAX(cast(Total_deaths as int)) as TotalDeathCount
FROM PortfolioProject.CovidDeaths
WHERE continent is not null 
GROUP BY Location
ORDER BY TotalDeathCount desc

-- Showing Death Count by Continent

SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
FROM PortfolioProject.CovidDeaths
WHERE continent is null 
GROUP BY location
ORDER BY TotalDeathCount desc

-- GLOBAL NUMBERS

SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
FROM PortfolioProject.CovidDeaths
WHERE continent is not null  
--Group By date 
ORDER BY 1,2


--Total Population vs Vaccinations
--Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations
, SUM (cast(vac.new_vaccinations as int)) OVER(Partition by dth.location ORDER BY dth.location, dth.date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject.CovidDeaths dth
JOIN PortfolioProject.CovidVaccinations vac
    On dth.location = vac.location
    and dth.date = vac.date
WHERE dth.continent is not null
ORDER BY 2,3


-- Using Temp Table to perform Calculation on Partition By in previous query

DROP TABLE if exists PortfolioProject.PercentPopulationVaccinated
CREATE TABLE PortfolioProject.PercentPopulationVaccinated
(
Continent string,
Location string,
Date datetime,
Population integer,
New_vaccinations integer,
RollingPeopleVaccinated integer
)

INSERT INTO PortfolioProject.PercentPopulationVaccinated
SELECT dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations
, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dth.Location Order by dth.location, dth.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject.CovidDeaths dth
JOIN PortfolioProject.CovidVaccinations vac
	On dth.location = vac.location
	and dth.date = vac.date
--where dth.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From PortfolioProject.PercentPopulationVaccinated


-- Creating View to store data for later visualizations

CREATE VIEW PortfolioProject.PercentPopulationVaccinated as
SELECT dth.continent, dth.location, dth.date, dth.population, vac.new_vaccinations
, SUM(CAST(vac.new_vaccinations as int)) OVER (Partition by dth.Location Order by dth.location, dth.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
FROM PortfolioProject.CovidDeaths dth
JOIN PortfolioProject.CovidVaccinations vac
	On dth.location = vac.location
	and dth.date = vac.date
WHERE dth.continent is not null 
